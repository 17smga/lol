summary(danio_por_jug)
####### Outliers ########
danio_por_jug <- lol %>%
group_by(Player) %>%
summarize(danio_prom = mean(Champion.Damage.Share))
danio_por_jug
summary(danio_por_jug)
q1 <- quantile(danio_por_jug$danio_prom, 0.25)
q3 <- quantile(danio_por_jug$danio_prom, 0.75)
iqr <- q3-q1
lower <- q1 - 1.5 * iqr
upper <- q3 + 1.5 * iqr
# Filtramos
danio_por_jug %>%
filter(danio_prom > upper | danio_prom < lower)
# Filtramos
danio_por_jug %>%
filter(danio_prom > upper | danio_prom < lower)
outliers <- danio_por_jug %>%
filter(danio_prom > upper | danio_prom < lower)
outliers
minios_pos <- lol %>%
group_by(Position) %>%
select(Creep.Score)
View(minios_pos)
minios_pos <- lol %>%
select(Creep.Score) %>%
group_by(Position)
View(minios_pos)
minios_pos <- lol %>%
select(Creep.Score, Position) %>%
group_by(Position)
View(minios_pos)
minios_pos <- lol %>%
select(Position, Creep.Score) %>%
group_by(Position)
View(minios_pos)
minios_pos <- lol %>%
select(Position, Creep.Score) %>%
group_by(Position)
q1 <- quantile(minion_pos$Crep.Score, 0.25)
q3 <- quantile(minion_pos$Creep.Score, 0.75)
iqr <- q3-q1
lower <- q1 - 1.5 * iqr
upper <- q3 + 1.5 * iqr
# Filtramos
outliers <- minion_pos %>%
filter(Creep.Score > upper | Creep.Score < lower)
minion_pos <- lol %>%
select(Position, Creep.Score) %>%
group_by(Position)
q1 <- quantile(minion_pos$Crep.Score, 0.25)
q3 <- quantile(minion_pos$Creep.Score, 0.75)
iqr <- q3-q1
lower <- q1 - 1.5 * iqr
upper <- q3 + 1.5 * iqr
# Filtramos
outliers <- minion_pos %>%
filter(Creep.Score > upper | Creep.Score < lower)
outliers
minion_pos <- lol %>%
select(Position, Creep.Score) %>%
filter(Position == 'Support')
View(minion_pos)
minion_pos <- lol %>%
select(Position, Creep.Score) %>%
filter(Position == 'Support')
q1 <- quantile(minion_pos$Crep.Score, 0.25)
q3 <- quantile(minion_pos$Creep.Score, 0.75)
iqr <- q3-q1
lower <- q1 - 1.5 * iqr
upper <- q3 + 1.5 * iqr
# Filtramos
outliers <- minion_pos %>%
filter(Creep.Score > upper | Creep.Score < lower)
outliers
minion_pos <- lol %>%
select(Position, Creep.Score) %>%
filter(Position == 'Support')
q1 <- quantile(minion_pos$Creep.Score, 0.25)
q3 <- quantile(minion_pos$Creep.Score, 0.75)
iqr <- q3-q1
lower <- q1 - 1.5 * iqr
upper <- q3 + 1.5 * iqr
# Filtramos
outliers <- minion_pos %>%
filter(Creep.Score > upper | Creep.Score < lower)
outliers
lol <- read.csv('League of Legends 2021 World Championship Play-In Groups Statistics - Raw Data.csv')
summary(lol)
glimpse(lol)
lol$Team <- as.factor(lol$Team)
lol$Player <- as.factor(lol$Player)
lol$Opponent <- as.factor(lol$Opponent)
lol$Position <- as.factor(lol$Position)
lol$Champion <- as.factor(lol$Champion)
lol$Result <- as.factor(lol$Result)
names(lol$Result) <- c(0,1)
summary(lol$Result)
resultados <- lol$Result
resultados[[1]]
datos_beyond <- lol %>%
filter(Team == 'BYG')
datos_dfm <- lol %>%
filter(Team == 'DFM')
minion_pos <- lol %>%
select(Position, Creep.Score) %>%
filter(Position == 'Support')
q1 <- quantile(minion_pos$Creep.Score, 0.25)
q3 <- quantile(minion_pos$Creep.Score, 0.75)
iqr <- q3-q1
lower <- q1 - 1.5 * iqr
upper <- q3 + 1.5 * iqr
# Filtramos
outliers <- minion_pos %>%
filter(Creep.Score > upper | Creep.Score < lower)
outliers
minion_pos <- lol %>%
select(Position, Player, Team, Creep.Score) %>%
filter(Position == 'Support')
q1 <- quantile(minion_pos$Creep.Score, 0.25)
q3 <- quantile(minion_pos$Creep.Score, 0.75)
iqr <- q3-q1
lower <- q1 - 1.5 * iqr
upper <- q3 + 1.5 * iqr
# Filtramos
outliers <- minion_pos %>%
filter(Creep.Score > upper | Creep.Score < lower)
outliers
minion_pos <- lol %>%
select(Position, Player, Team, Opponent, Creep.Score) %>%
filter(Position == 'Support')
q1 <- quantile(minion_pos$Creep.Score, 0.25)
q3 <- quantile(minion_pos$Creep.Score, 0.75)
iqr <- q3-q1
lower <- q1 - 1.5 * iqr
upper <- q3 + 1.5 * iqr
# Filtramos
outliers <- minion_pos %>%
filter(Creep.Score > upper | Creep.Score < lower)
outliers
minion_pos <- lol %>%
select(Position, Player, Champion, Team, Opponent, Creep.Score) %>%
filter(Position == 'Support')
q1 <- quantile(minion_pos$Creep.Score, 0.25)
q3 <- quantile(minion_pos$Creep.Score, 0.75)
iqr <- q3-q1
lower <- q1 - 1.5 * iqr
upper <- q3 + 1.5 * iqr
# Filtramos
outliers <- minion_pos %>%
filter(Creep.Score > upper | Creep.Score < lower)
outliers
lol %>%
filter(Team %in% c('BYG', 'DFM')) %>%
group_by(Team) %>%
summarize(minions_media = mean(Creep.Score),
vision_media = mean(Ward.Interactions))
################# Regresion ################################
regresion <- lm(data = lol, formula = lol$Dragons.For ~ lol$Wards.Placed)
regresion
ggplot(data = lol, aes(x = Wards.placed, y = Dragons.For)) +
geom_point(colour = "blue4") +
ggtitle("Diagrama de dispersion") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = lol, aes(x = lol$Wards.placed, y = lol$Dragons.For)) +
geom_point(colour = "blue4") +
ggtitle("Diagrama de dispersion") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = lol, aes(x = Wards.placed, y = Dragons.For)) +
geom_point(colour = "blue4") +
ggtitle("Diagrama de dispersion") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = lol, aes(x = Wards.Placed, y = Dragons.For)) +
geom_point(colour = "blue4") +
ggtitle("Diagrama de dispersion") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = lol, aes(x = Wards.Placed, y = Result)) +
geom_point(colour = "blue4") +
ggtitle("Diagrama de dispersion") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
vision_equipos <- lol %>%
group_by(Team) %>%
summarize(vision_prom = mean(Wards.Placed))
vision_equipos
vision_equipos <- lol %>%
select(Team, Dragons.For)
group_by(Team) %>%
summarize(vision_prom = mean(Wards.Placed))
vision_equipos <- lol %>%
select(Team, Dragons.For)
group_by(Team) %>%
summarize(vision_prom = mean(Wards.Placed))
vision_equipos <- lol %>%
group_by(Team) %>%
select(Team, Dragons.For)
summarize(vision_prom = mean(Wards.Placed))
vision_equipos <- lol %>%
group_by(Team) %>%
select(Team, Dragons.For, Wards.Placed)
summarize(vision_prom = mean(Wards.Placed))
vision_equipos <- lol %>%
group_by(Team) %>%
summarize(vision_prom = mean(Wards.Placed))
vision_equipos
vision_equipos <- lol %>%
select(Team, Dragons.For, Wards.Placed) %>%
group_by(Team) %>%
summarize(vision_prom = mean(Wards.Placed))
vision_equipos
vision_equipos <- lol %>%
select(Team, Dragons.For, Wards.Placed) %>%
group_by(Team) %>%
summarize(vision_prom = mean(Wards.Placed),
Dragons.For)
vision_equipos
vision_equipos <- lol %>%
select(Team, Dragons.For, Wards.Placed) %>%
group_by(Team) %>%
summarize(vision_prom = mean(Wards.Placed))
vision_equipos
vision_equipos <- lol %>%
select(Team, Dragons.For, Wards.Placed) %>%
group_by(Team) %>%
summarize(vision_prom = mean(Wards.Placed)
dragones = mean(Dragons.For))
vision_equipos <- lol %>%
select(Team, Dragons.For, Wards.Placed) %>%
group_by(Team) %>%
summarize(vision_prom = mean(Wards.Placed,
dragones = mean(Dragons.For))
vision_equipos
vision_equipos <- lol %>%
select(Team, Dragons.For, Wards.Placed) %>%
group_by(Team) %>%
summarize(vision_prom = mean(Wards.Placed),
dragones = mean(Dragons.For))
library(dplyr)
library(ggplot2)
vision_equipos <- lol %>%
select(Team, Dragons.For, Wards.Placed) %>%
group_by(Team) %>%
summarize(vision_prom = mean(Wards.Placed),
dragones = mean(Dragons.For))
vision_equipos
ggplot(data = vision_equipos, aes(x = vision_prom, y = dragones)) +
geom_point(colour = "blue4") +
ggtitle("Diagrama de dispersion") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
vision_equipos <- lol %>%
select(Team, Dragons.For, Ward.Interactions) %>%
group_by(Team) %>%
summarize(vision_prom = mean(Ward.Interactions),
dragones = mean(Dragons.For))
ggplot(data = vision_equipos, aes(x = vision_prom, y = dragones)) +
geom_point(colour = "blue4") +
ggtitle("Diagrama de dispersion") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
library(dplyr)
library(ggplot2)
ggplot(data = vision_equipos, aes(x = vision_prom, y = dragones)) +
geom_point(colour = "blue4") +
ggtitle("Diagrama de dispersion") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
######################################################
lol %>%
count(Team)
######################################################
lol %>%
count(Team) %>%
mutate(probs = n/sum(n))
lol %>%
sample_n(10)
library(dplyr)
library(ggplot2)
Sys.Date()
Sys.time()
lck <- read.csv('data_raw LCK 2021.csv')
setwd("~/R Project/Proyecto lol")
lck <- read.csv('data_raw LCK 2021.csv')
lck <- read.csv('data_raw - LCK 2021.csv')
lck <- read.csv('data_raw - LCK 2021.csv')
str(lck)
names(lck)
require(gapminder)
require(gapminder)
require('gapminder')
install.packages('gapminder')
library(gapminder)
library(dplyr)
for name in names(lck){
print(name)
}
lck <- read.csv('data_raw - LCK 2021.csv')
str(lck)
names(lck)
for name in names(lck){
print(name)
}
class(name(lck))
class(names(lck))
for i in names(lck){
print(i)
}
for i in names(lck):
print(i)
for i in range(names(lck)):
print(names(lck)[i])
for i in range(names(lck)){
print(names(lck)[i])
}
for (i in range(names(lck))){
print(names(lck)[i])
}
for (name in names(lck)){
print(name)
}
View(lck)
len(names)
length(names(lck))
shape(lck)
summary(lck)
lck[lck$Vision.Score > 200]
lck[,lck$Vision.Score > 200]
lck[lck$Vision.Score]
visiones <- lck$Vision.Score
lck[, visiones]
lck[, lck$Vision.Score]
lck[c(visiones)]
lck[c(,visiones)]
lck[,Vision.Score]
lck[,"Vision.Score"]
visiones <- lck$Vision.Score > 200
lck[,visiones]
lck[visiones]
visiones[visiones]
lck[visiones,]
library(dplyr)
lck %>%
filter(Vision.Score > 200)
lck %>%
filter(Vision.Score > 150)
lck %>%
filter(Vision.Score > 150, Role == 'JUNGLE')
lck %>%
arrange(KDA)
lck %>%
arrange(desc(KDA))
lol <- read.csv('League of Legends 2021 World Championship Play-In Groups Statistics - Raw Data.csv')
lol %>%
# Filter for rice food category
filter(Position == "Adc") %>%
# Create histogram of co2_emission
ggplot(aes(Creep.Score)) +
geom_histogram()
library(ggplot2)
library(dplyr)
lol %>%
# Filter for rice food category
filter(Position == "Adc") %>%
# Create histogram of co2_emission
ggplot(aes(Creep.Score)) +
geom_histogram()
lck %>%
# Filter for rice food category
filter(Position == "ADC") %>%
# Create histogram of co2_emission
ggplot(aes(CSM)) +
geom_histogram()
lck %>%
# Filter for rice food category
filter(Role == "ADC") %>%
# Create histogram of co2_emission
ggplot(aes(CSM)) +
geom_histogram()
danio_por_jug <- lol %>%
group_by(Player) %>%
summarize(danio_prom = mean(Champion.Damage.Share))
summary(danio_por_jug)
minion_pos <- lol %>%
select(Position, Player, Champion, Team, Opponent, Creep.Score) %>%
filter(Position == 'Support')
q1 <- quantile(minion_pos$Creep.Score, 0.25)
q3 <- quantile(minion_pos$Creep.Score, 0.75)
iqr <- q3-q1
lower <- q1 - 1.5 * iqr
upper <- q3 + 1.5 * iqr
# Filtramos
outliers <- minion_pos %>%
filter(Creep.Score > upper | Creep.Score < lower)
outliers
lck %>%
select(Team, Player, Role, KDA, Win) %>%
arrange(desc(KDA))
minion_pos <- lck %>%
select(Role, Player, Team, CS) %>%
filter(Position == 'SUPPORT')
q1 <- quantile(minion_pos$CS, 0.25)
q3 <- quantile(minion_pos$CS, 0.75)
iqr <- q3-q1
lower <- q1 - 1.5 * iqr
upper <- q3 + 1.5 * iqr
# Filtramos
outliers <- minion_pos %>%
filter(Creep.Score > upper | Creep.Score < lower)
outliers
minion_pos <- lck %>%
select(Role, Player, Team, CS) %>%
filter(Position == 'ADC')
q1 <- quantile(minion_pos$CS, 0.25)
q3 <- quantile(minion_pos$CS, 0.75)
iqr <- q3-q1
lower <- q1 - 1.5 * iqr
upper <- q3 + 1.5 * iqr
# Filtramos
outliers <- minion_pos %>%
filter(Creep.Score > upper | Creep.Score < lower)
outliers
minion_pos <- lck %>%
select(Role, Player, Team, CS) %>%
filter(Position == 'SUPPORT')
q1 <- quantile(minion_pos$CS, 0.25)
q3 <- quantile(minion_pos$CS, 0.75)
iqr <- q3-q1
lower <- q1 - 1.5 * iqr
upper <- q3 + 1.5 * iqr
# Filtramos
outliers <- minion_pos %>%
filter(CS > upper | CS < lower)
minion_pos <- lck %>%
select(Role, Player, Team, CS) %>%
filter(Position == 'SUPPORT')
q1 <- quantile(minion_pos$CS, 0.25)
q3 <- quantile(minion_pos$CS, 0.75)
iqr <- q3-q1
lower <- q1 - 1.5 * iqr
upper <- q3 + 1.5 * iqr
# Filtramos
outliers <- minion_pos %>%
filter(CS > upper | CS < lower)
View(minion_pos)
minion_pos <- lck %>%
select(Role, Player, Team, CS) %>%
filter(Position == 'SUPPORT')
minion_pos <- lck %>%
select(Role, Player, Team, CS) %>%
filter(Role == 'SUPPORT')
minion_pos <- lck %>%
select(Role, Player, Team, CS) %>%
filter(Role == 'SUPPORT')
q1 <- quantile(minion_pos$CS, 0.25)
q3 <- quantile(minion_pos$CS, 0.75)
iqr <- q3-q1
lower <- q1 - 1.5 * iqr
upper <- q3 + 1.5 * iqr
# Filtramos
outliers <- minion_pos %>%
filter(CS > upper | CS < lower)
outliers
minion_pos <- lck %>%
select(Role, Player, Team, CS, CSM) %>%
filter(Role == 'SUPPORT') %>%
mutate(duration = CS / CSM)
q1 <- quantile(minion_pos$CS, 0.25)
q3 <- quantile(minion_pos$CS, 0.75)
iqr <- q3-q1
lower <- q1 - 1.5 * iqr
upper <- q3 + 1.5 * iqr
# Filtramos
outliers <- minion_pos %>%
filter(CS > upper | CS < lower)
outliers
outliers <- minion_pos %>%
filter(CS > upper | CS < lower) %>%
arrange(desc(CS))
outliers
minion_pos <- lck %>%
select(Role, Player, Team, CS, CSM) %>%
filter(Role == 'ADC') %>%
mutate(duration = CS / CSM)
q1 <- quantile(minion_pos$CS, 0.25)
q3 <- quantile(minion_pos$CS, 0.75)
iqr <- q3-q1
lower <- q1 - 1.5 * iqr
upper <- q3 + 1.5 * iqr
# Filtramos
outliers <- minion_pos %>%
filter(CS > upper | CS < lower) %>%
arrange(desc(CS))
outliers
minion_pos <- lck %>%
select(Role, Player, Team, CS, CSM) %>%
filter(Role == 'JUNGLE') %>%
mutate(duration = CS / CSM)
q1 <- quantile(minion_pos$CS, 0.25)
q3 <- quantile(minion_pos$CS, 0.75)
iqr <- q3-q1
lower <- q1 - 1.5 * iqr
upper <- q3 + 1.5 * iqr
# Filtramos
outliers <- minion_pos %>%
filter(CS > upper | CS < lower) %>%
arrange(desc(CS))
outliers
